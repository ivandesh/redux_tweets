{"ast":null,"code":"var _jsxFileName = \"/home/ivandesh/work/redux-course-curriculum/src/components/TweetView.js\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport Tweet from './Tweet';\nimport { useParams } from 'react-router-dom';\nexport default function TweetView() {\n  const tweets = useSelector(state => state.tweets);\n  const users = useSelector(state => state.users);\n  const authedUser = useSelector(state => state.authedUser);\n  const {\n    id\n  } = useParams();\n  const tweet = tweets[id];\n  const author = tweet.isEmpty() ? null : users[tweet.author];\n  console.log(tweet);\n  console.log(author);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, \"test\");\n}","map":{"version":3,"sources":["/home/ivandesh/work/redux-course-curriculum/src/components/TweetView.js"],"names":["React","useSelector","Tweet","useParams","TweetView","tweets","state","users","authedUser","id","tweet","author","isEmpty","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AAEA,eAAe,SAASC,SAAT,GAAqB;AAClC,QAAMC,MAAM,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACD,MAAhB,CAA1B;AACA,QAAME,KAAK,GAAGN,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,KAAhB,CAAzB;AACA,QAAMC,UAAU,GAAGP,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACE,UAAhB,CAA9B;AACA,QAAM;AAACC,IAAAA;AAAD,MAAON,SAAS,EAAtB;AAEA,QAAMO,KAAK,GAAGL,MAAM,CAACI,EAAD,CAApB;AACA,QAAME,MAAM,GAAGD,KAAK,CAACE,OAAN,KAAkB,IAAlB,GAAyBL,KAAK,CAACG,KAAK,CAACC,MAAP,CAA7C;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD","sourcesContent":["import React from 'react';\nimport {useSelector} from 'react-redux';\nimport Tweet from './Tweet';\nimport {useParams} from 'react-router-dom'\n\nexport default function TweetView() {\n  const tweets = useSelector(state => state.tweets)\n  const users = useSelector(state => state.users)\n  const authedUser = useSelector(state => state.authedUser)\n  const {id} = useParams()\n\n  const tweet = tweets[id]\n  const author = tweet.isEmpty() ? null : users[tweet.author]\n  console.log(tweet)\n  console.log(author)\n\n  return (\n    <div>\n      {/* <Tweet /> */}test\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}