{"ast":null,"code":"var _jsxFileName = \"/home/ivandesh/work/redux-course-curriculum/src/components/Tweet.js\";\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { FaReply, FaHeart } from \"react-icons/fa\";\nimport { handleToggleLike } from '../actions/likes';\nimport { Link } from 'react-router-dom';\nexport default function Tweet({\n  id,\n  name,\n  avatarURL,\n  date,\n  replies,\n  repliesCount,\n  likes,\n  likesCount,\n  text,\n  replyingToAuthor\n}) {\n  const authedUser = useSelector(state => state.authedUser);\n  const dispatch = useDispatch();\n  const isLiked = likes.includes(authedUser);\n\n  const handleClick = e => {\n    e.preventDefault();\n    dispatch(handleToggleLike({\n      id,\n      hasLiked: !isLiked,\n      authedUser\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(Link, {\n    to: {\n      pathname: `/tweets/${id}`\n    },\n    className: \"tweet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: avatarURL,\n    alt: `${name} avatar`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, date), replyingToAuthor && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"Replying to @\", replyingToAuthor)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"tweet-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, text), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FaReply, {\n    className: \"reply\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }), repliesCount), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FaHeart, {\n    className: `like ${isLiked ? 'liked' : ''}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), likesCount))));\n}","map":{"version":3,"sources":["/home/ivandesh/work/redux-course-curriculum/src/components/Tweet.js"],"names":["React","useSelector","useDispatch","FaReply","FaHeart","handleToggleLike","Link","Tweet","id","name","avatarURL","date","replies","repliesCount","likes","likesCount","text","replyingToAuthor","authedUser","state","dispatch","isLiked","includes","handleClick","e","preventDefault","hasLiked","pathname"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,gBAAjC;AACA,SAAQC,gBAAR,QAA+B,kBAA/B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AAGA,eAAe,SAASC,KAAT,CAAe;AAACC,EAAAA,EAAD;AAAKC,EAAAA,IAAL;AAAWC,EAAAA,SAAX;AAAsBC,EAAAA,IAAtB;AAA4BC,EAAAA,OAA5B;AAAqCC,EAAAA,YAArC;AAAmDC,EAAAA,KAAnD;AAA0DC,EAAAA,UAA1D;AAAsEC,EAAAA,IAAtE;AAA4EC,EAAAA;AAA5E,CAAf,EAA8G;AAC3H,QAAMC,UAAU,GAAGjB,WAAW,CAACkB,KAAK,IAAIA,KAAK,CAACD,UAAhB,CAA9B;AACA,QAAME,QAAQ,GAAGlB,WAAW,EAA5B;AACA,QAAMmB,OAAO,GAAGP,KAAK,CAACQ,QAAN,CAAeJ,UAAf,CAAhB;;AAEA,QAAMK,WAAW,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,QAAQ,CAACf,gBAAgB,CAAC;AACxBG,MAAAA,EADwB;AAExBkB,MAAAA,QAAQ,EAAE,CAACL,OAFa;AAGxBH,MAAAA;AAHwB,KAAD,CAAjB,CAAR;AAKD,GAPD;;AAQA,sBACE,oBAAC,IAAD;AACE,IAAA,EAAE,EAAE;AACFS,MAAAA,QAAQ,EAAG,WAAUnB,EAAG;AADtB,KADN;AAIE,IAAA,SAAS,EAAC,OAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAK,IAAA,GAAG,EAAEE,SAAV;AAAqB,IAAA,GAAG,EAAG,GAAED,IAAK,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,IAAL,CADF,eAEE;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBE,IAAtB,CAFF,EAGGM,gBAAgB,iBACf;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAmCA,gBAAnC,CAJJ,CADF,eAQE;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BD,IAA3B,CARF,eAUE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAC8BH,YAD9B,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,OAAO,EAAEU,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAG,QAAOF,OAAO,GAAG,OAAH,GAAa,EAAG,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EACyDN,UADzD,CAJF,CAVF,CAPF,CADF;AA6BD","sourcesContent":["import React from 'react';\nimport {useSelector, useDispatch} from 'react-redux';\nimport { FaReply, FaHeart } from \"react-icons/fa\";\nimport {handleToggleLike} from '../actions/likes';\nimport {Link} from 'react-router-dom';\n\n\nexport default function Tweet({id, name, avatarURL, date, replies, repliesCount, likes, likesCount, text, replyingToAuthor}) {\n  const authedUser = useSelector(state => state.authedUser)\n  const dispatch = useDispatch();\n  const isLiked = likes.includes(authedUser)\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    dispatch(handleToggleLike({\n      id,\n      hasLiked: !isLiked,\n      authedUser\n    }))\n  }\n  return (\n    <Link \n      to={{\n        pathname: `/tweets/${id}`,\n      }}\n      className='tweet'\n    >\n      <img src={avatarURL} alt={`${name} avatar`}/>\n      <div>\n        <div className=\"user-info\">\n          <h5>{name}</h5>\n          <p className=\"muted\">{date}</p>\n          {replyingToAuthor &&\n            <p className=\"muted\">Replying to @{replyingToAuthor}</p>}\n        </div>\n\n        <p className=\"tweet-text\">{text}</p>\n\n        <div className=\"buttons\">\n          <div className=\"button\">\n          <FaReply className='reply' />{repliesCount}\n          </div>\n          <div className=\"button\" onClick={handleClick}>\n          <FaHeart className={`like ${isLiked ? 'liked' : ''}`} />{likesCount}\n          </div>\n        </div>\n      </div>\n    </Link>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}