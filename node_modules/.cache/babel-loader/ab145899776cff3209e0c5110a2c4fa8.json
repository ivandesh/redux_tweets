{"ast":null,"code":"export const FETCH_INITIAL_DATA = 'FETCH_INITIAL_DATA';\nimport { showLoading, hideLoading } from 'react-redux-loading';\nimport { fetchUsers } from './users';\nimport { fetchTweets } from './tweets';\nimport { setAuthedUser } from './authedUser';\nimport { getInitialData } from '../utils/api';\nconst AUTHED_USER = 'tylermcginnis';\nexport function fetchInitialData() {\n  return dispatch => {\n    dispatch(showLoading());\n    return getInitialData().then(({\n      users,\n      tweets\n    }) => {\n      dispatch(hideLoading());\n      dispatch(fetchUsers(users));\n      dispatch(fetchTweets(tweets));\n      dispatch(setAuthedUser(AUTHED_USER));\n    });\n  };\n}","map":{"version":3,"sources":["/home/ivandesh/work/redux-course-curriculum/src/actions/shared.js"],"names":["FETCH_INITIAL_DATA","showLoading","hideLoading","fetchUsers","fetchTweets","setAuthedUser","getInitialData","AUTHED_USER","fetchInitialData","dispatch","then","users","tweets"],"mappings":"AAAA,OAAO,MAAMA,kBAAkB,GAAG,oBAA3B;AACP,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,qBAAvC;AACA,SAAQC,UAAR,QAAyB,SAAzB;AACA,SAAQC,WAAR,QAA0B,UAA1B;AACA,SAAQC,aAAR,QAA4B,cAA5B;AACA,SAAQC,cAAR,QAA6B,cAA7B;AAEA,MAAMC,WAAW,GAAG,eAApB;AAEA,OAAO,SAASC,gBAAT,GAA4B;AACjC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACR,WAAW,EAAZ,CAAR;AACA,WAAOK,cAAc,GAClBI,IADI,CACC,CAAC;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAD,KAAqB;AACzBH,MAAAA,QAAQ,CAACP,WAAW,EAAZ,CAAR;AACAO,MAAAA,QAAQ,CAACN,UAAU,CAACQ,KAAD,CAAX,CAAR;AACAF,MAAAA,QAAQ,CAACL,WAAW,CAACQ,MAAD,CAAZ,CAAR;AACAH,MAAAA,QAAQ,CAACJ,aAAa,CAACE,WAAD,CAAd,CAAR;AACD,KANI,CAAP;AAOD,GATD;AAUD","sourcesContent":["export const FETCH_INITIAL_DATA = 'FETCH_INITIAL_DATA';\nimport {showLoading, hideLoading} from 'react-redux-loading';\nimport {fetchUsers} from './users';\nimport {fetchTweets} from './tweets';\nimport {setAuthedUser} from './authedUser';\nimport {getInitialData} from '../utils/api';\n\nconst AUTHED_USER = 'tylermcginnis';\n\nexport function fetchInitialData() {\n  return (dispatch) => {\n    dispatch(showLoading())\n    return getInitialData()\n      .then(({users, tweets}) => {\n        dispatch(hideLoading())\n        dispatch(fetchUsers(users))\n        dispatch(fetchTweets(tweets))\n        dispatch(setAuthedUser(AUTHED_USER))\n      })\n  }\n}"]},"metadata":{},"sourceType":"module"}